# Файл docker-compose.yml

# Версия docker-compose
version: '3'

# Перечень volume
volumes:
  # pg_data_production - для файлов базы данных в продакшине
  pg_data_production:
  # static_volume — для статических файлов
  static_volume:

# Перечень контейнеров
services:
  # Имя и описание первого контейнера; имя выбирает разработчик. 
  # Это контейнер БД
  db:
    # Из какого образа запустить контейнер:
    image: postgres:13.10
    # Файл (или список файлов) с переменными окружения
    env_file: .env
    # Какой volume подключить для этого контейнера
    volumes:
      - pg_data_production:/var/lib/postgresql/data
  # Имя и описание контейнера с бэкендом
  backend:
    # Качаем с Docker Hub
    image: randevit/taski_backend
    env_file: .env

    # Тут подключаем volume к backend
    volumes:
      - static_volume:/backend_static

    # Какие контейнеры нужно запустить до старта этого контейнера:
    depends_on:
      - db
  # Имя третьего контейнера. Это контейнер с фронтендом
  frontend:
    # Качаем с Docker Hub
    image: randevit/taski_frontend
    env_file: .env
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static_volume:/frontend_static
# Добавляем новый контейнер: gateway
  gateway:
    image: randevit/taski_gateway
    
    env_file: .env

    # А тут подключаем volume со статикой к gateway
    volumes:
      - static_volume:/staticfiles/

    # Ключ ports устанавливает
    # перенаправление всех запросов с порта 8000 хоста
    # на порт 80 контейнера
    ports:
      - 8000:80 
    depends_on:
      - backend
